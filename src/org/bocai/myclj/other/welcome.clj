;;welcome to alibaba

;;define matrix,5*7
(def matrix57 {"a" ["  ***" " *  *" "*   *" "*   *" "*****" "*   *" "*   *"]
               "b" ["**** " "*   *" "*   *" "**** " "*   *" "*   *" "**** "]
               "c" [" *** " "*   *" "*    " "*    " "*    " "*   *" " *** "]
               "e" ["*****" "*    " "*    " "**** " "*    " "*    " "*****"]
               "i" [" *** " "  *  " "  *  " "  *  " "  *  " "  *  " " *** "]
               "l" ["*    " "*    " "*    " "*    " "*    " "*    " "*****"]
               "m" ["*   *" "** **" "* * *" "* * *" "*   *" "*   *" "*   *"]
               "o" [" *** " "*   *" "*   *" "*   *" "*   *" "*   *" " *** "]
               "t" ["*****" "  *  " "  *  " "  *  " "  *  " "  *  " "  *  "]
               "w" ["*   *" "*   *" "*   *" "*   *" "* * *" "* * *" " * * "]
               " " ["     " "     " "     " "     " "     " "     " "     "]})

;;print string
(defn print-matrix [welcome]
  (println "")
  (dotimes [x 7]
    (println
      (apply str
        (map #(str (nth % x) " ")
          (map #(get matrix57 (str %)) welcome))))))

(print-matrix "welcome to alibaba")
